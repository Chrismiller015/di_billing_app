datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Program {
  WEBSITE
  CHAT
  TRADE
}

enum DiscrepancyStatus {
  OPEN
  IN_REVIEW
  RESOLVED
  ARCHIVED
}

model Account {
  id         String   @id @default(cuid())
  sfid       String   @unique
  name       String
  bac        String   @db.Char(6)
  isPrimary  Boolean
  isChevy    Boolean  @default(false)
  isGmc      Boolean  @default(false)
  isBuick    Boolean  @default(false)
  isCadillac Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  subscriptions Subscription[]
}

model Subscription {
  id          String   @id @default(cuid())
  accountId   String
  account     Account  @relation(fields: [accountId], references: [id])
  productCode String
  program     Program
  unitPrice   Int
  qty         Int
  isLive      Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pricing {
  productCode   String  @id
  canonical     String
  program       Program
  standardPrice Int
  active        Boolean @default(true)
}

model GMInvoice {
  id        String   @id @default(cuid())
  program   Program
  period    String
  fileName  String
  current   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lines GMInvoiceLine[]
}

model GMInvoiceLine {
  id          String    @id @default(cuid())
  invoiceId   String
  invoice     GMInvoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  bac         String
  productCode String
  name        String
  qty         Int
  unitPrice   Int
}

model Discrepancy {
  id        String            @id @default(cuid())
  bac       String
  program   Program
  period    String
  sfName    String?
  sfTotal   Int
  gmTotal   Int
  variance  Int
  status    DiscrepancyStatus @default(OPEN)
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  reportEntries ReportEntry[]
}

model Report {
  id        String   @id @default(cuid())
  name      String
  program   Program
  period    String
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entries ReportEntry[]
}

model ReportEntry {
  id                  String      @id @default(cuid())
  reportId            String
  report              Report      @relation(fields: [reportId], references: [id])
  discrepancyId       String
  discrepancy         Discrepancy @relation(fields: [discrepancyId], references: [id], onDelete: Cascade)
  category            String?
  notes               String?
  specificAccountName String? 
  specificSalesforceId String?
  isPrimary           Boolean?  

  @@unique([reportId, discrepancyId])
}